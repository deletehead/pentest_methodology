#!/usr/bin/env python3
'''
Main script to execute enumeration for Internal & External pentests
'''
# built-ins
import sys, os

# pip installs
try:
    from termcolor import colored
    import argparse
except:
    sys.exit('[!] Requirements not met! -> pip3 install -r requirements.txt')

# custom
from modules.log import *
from modules.enum import *

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('domain', help='Target domain to perform OSINT, DNS, AD. Separate multiple with comma, ex. evil.org,evil.com')
    parser.add_argument('ip_list', help='List of IPs/subnets in nmap syntax.')
    parser.add_argument('enviro', help='Pentest environment. Must be "ept" or "ipt"')
    log('[*] Writing output directories to $PWD. Is that ok? Any key for yes, CTRL+C if not') 
    input()

    # set args
    args = parser.parse_args()
    domain = args.domain
    ip_file = args.ip_list
    ept = True if args.enviro.lower() == 'ept' else False
    ipt = True if args.enviro.lower() == 'ipt' else False
    if not ept and not ipt:
        log_red('[!] enviro must be "ept" or "ipt"')

    # create output dir
    if not os.path.exists('enumeration'):
        os.mkdir('enumeration')
    else:
        log_red('[!] A ./enumeration directory already exists! Exiting *GZZT*')
        sys.exit()

    log('[*] Running an EPT scan & enumeration activities') if ept else log('[*] Running an IPT scan & enumeration activities')
    run_ept_enum(domain, ip_file) if ept else run_ipt_enum(domain, ip_file)
    return

def test():
    return

if __name__ == '__main__':
    main()
    test()
